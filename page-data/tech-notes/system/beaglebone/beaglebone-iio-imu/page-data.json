{"componentChunkName":"component---node-modules-rocketseat-gatsby-theme-docs-core-src-templates-docs-query-js","path":"/tech-notes/system/beaglebone/beaglebone-iio-imu","result":{"data":{"mdx":{"id":"7481887e-fee6-5bf6-b715-f9695191f127","excerpt":"The workspace is assumed to be at \"~/beaglebone\" and everything will be inside this folder by default in the following steps. Install tools Install toolsâ€¦","fields":{"slug":"/tech-notes/system/beaglebone/beaglebone-iio-imu/"},"frontmatter":{"title":"Build IMU IIO driver for Pocketbeagle","description":"ST IIO driver","image":null,"disableTableOfContents":null},"body":"var _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar _frontmatter = {\n  \"title\": \"Build IMU IIO driver for Pocketbeagle\",\n  \"description\": \"ST IIO driver\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"The workspace is assumed to be at \\\"~/beaglebone\\\" and everything will be inside this folder by default in the following steps.\"), mdx(\"h2\", {\n    \"id\": \"install-tools\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#install-tools\",\n    \"aria-label\": \"install tools permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Install tools\"), mdx(\"p\", null, \"Install tools:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"$ sudo apt install git bc bison flex libssl-dev make lzop\\n\")), mdx(\"p\", null, \"Install the same version of gcc compiler with the one in your debian image on Beaglebone. \"), mdx(\"h2\", {\n    \"id\": \"fetch-linux-kernel-source\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#fetch-linux-kernel-source\",\n    \"aria-label\": \"fetch linux kernel source permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Fetch Linux kernel source\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Beaglebone Linux Kernel ()\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"$ git clone -b 4.19-rt https://github.com/beagleboard/linux.git\\n\")), mdx(\"p\", null, \"The folder \\\"linux\\\" will be refered as the \\\"target directory\\\" in the following context.\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"ST Linux Kernel with IIO Drivers\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"$ git clone -b linux-4.19.y-gh https://github.com/STMicroelectronics/STMems_Linux_IIO_drivers.git\\n\")), mdx(\"p\", null, \"The folder \\\"STMems_Linux_IIO_drivers\\\" will be refered as the \\\"driver source directory\\\" in the following context.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Note\"), \": you will need to switch to a different branch accordingly if you want to use a different Linux kernel version.\"), mdx(\"h2\", {\n    \"id\": \"integrate-iio-drivers\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#integrate-iio-drivers\",\n    \"aria-label\": \"integrate iio drivers permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Integrate IIO drivers\"), mdx(\"p\", null, \"Follow the instructions in README.md at \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/STMicroelectronics/STMems_Linux_IIO_drivers/tree/linux-4.19.y-gh\"\n  }, \"https://github.com/STMicroelectronics/STMems_Linux_IIO_drivers/tree/linux-4.19.y-gh\"), \" \"), mdx(\"p\", null, \"Here is a brief summary of the steps:\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Copy driver source code (STMems_Linux_IIO_drivers/drivers/iio/imu/<your-imu-ic-name\", \">\", \") into the target directory (linux/drivers/iio/imu/<your-imu-ic-name\", \">\", \")\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Update Kconfig and makefile in the target directory to include the driver to be integrated\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Update custom event and channel types in \\\"include/uapi/linux/iio/types.h\\\" and \\\"include/uapi/linux/iio/types.h\\\" in the target directory\")), mdx(\"p\", null, \"Now you have the beaglebone kernel source \\\"patched\\\" with the ST IIO sensor driver. You can build and deploy the kernel as usual.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"$ make ARCH=arm CROSS_COMPILE=arm-linux-gnueabihf- bb.org_defconfig \\n$ make ARCH=arm CROSS_COMPILE=arm-linux-gnueabihf- menuconfig\\n\")), mdx(\"p\", null, \"You would need to update the following configurations. Additional options might be needed according to your application:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"* General setup ---> \\n    - Local version - append to kernel release : \\\"-pb-imu-rt\\\"\\n* Kernel Features  --->\\n    - Timer frequency : change to 1000Hz\\n* Device Drivers --->\\n    - Industrial I/O support --->\\n        - Mark your driver module as \\\"M\\\"\\n\")), mdx(\"p\", null, \"After configuration, you can build the kernel\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"$ make -j12 ARCH=arm CROSS_COMPILE=arm-linux-gnueabihf- deb-pkg\\n\")), mdx(\"p\", null, \"You will get 3 .deb files to be installed on the pocketbeagle, e.g.:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"linux-headers-4.19.94-pb-imu-rt+_4.19.94-pb-imu-rt+-5_armhf.deb\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"linux-libc-dev_4.19.94-pb-imu-rt+-5_armhf.deb\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"linux-image-4.19.94-pb-imu-rt+_4.19.94-pb-imu-rt+-5_armhf.deb\")), mdx(\"p\", null, \"Copy and install on pocketbeagle with \\\"dpkg\\\" command.\"), mdx(\"h2\", {\n    \"id\": \"update-device-tree-overlay\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#update-device-tree-overlay\",\n    \"aria-label\": \"update device tree overlay permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Update device tree overlay\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Build the device tree overlay\")), mdx(\"p\", null, \"Now you've got the drivers compiled with the kernel and you will need to add a device tree overlay to load the driver.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"$ git clone https://github.com/beagleboard/bb.org-overlays.git\\n\")), mdx(\"p\", null, \"It's easiest to use overlay files inside this repository as the base and modify from one that is cloest to your setup. For example, my LSM6DSM is connected to the SPI0 on pocketbeagle and I use \\\"bb.org-overlays/src/arm/PB-SPI0-ETH-WIZ-CLICK.dts\\\" as a reference to make my \\\"bb.org-overlays/src/arm/PB-SPI0-LSM6DSMTR.dts\\\"\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"/*\\n * Copyright (C) 2017 Robert Nelson <robertcnelson@gmail.com>\\n *\\n * This program is free software; you can redistribute it and/or modify\\n * it under the terms of the GNU General Public License version 2 as\\n * published by the Free Software Foundation.\\n *\\n */\\n\\n/dts-v1/;\\n/plugin/;\\n\\n#include <dt-bindings/gpio/gpio.h>\\n#include <dt-bindings/pinctrl/am33xx.h>\\n#include <dt-bindings/interrupt-controller/irq.h>\\n\\n/ {\\n    /*\\n     * Helper to show loaded overlays under: /proc/device-tree/chosen/overlays/\\n     */\\n    fragment@0 {\\n        target-path=\\\"/\\\";\\n        __overlay__ {\\n\\n            chosen {\\n                overlays {\\n                    PB-SPI0-LSM6DSMTR = __TIMESTAMP__;\\n                };\\n            };\\n        };\\n    };\\n\\n    /*\\n     * Free up the pins used by the cape from the pinmux helpers.\\n     */\\n    fragment@1 {\\n        target = <&ocp>;\\n        __overlay__ {\\n            P1_04_pinmux { status = \\\"disabled\\\"; }; /* LSM6DSMTR INT1 */\\n            P1_06_pinmux { status = \\\"disabled\\\"; }; /* SPI0 CS0 */\\n            P1_08_pinmux { status = \\\"disabled\\\"; }; /* SPI0 CLK */\\n            P1_10_pinmux { status = \\\"disabled\\\"; }; /* SPI0 MISO */\\n            P1_12_pinmux { status = \\\"disabled\\\"; }; /* SPI0 MOSI */\\n            P2_22_pinmux { status = \\\"disabled\\\"; }; /* LSM6DSMTR INT2 (not used) */\\n        };\\n    };\\n\\n    fragment@2 {\\n        target = <&am33xx_pinmux>;\\n        __overlay__ {\\n            lsm6dsmtr_pins: pinmux_lsm6dsmtr_pins {\\n                pinctrl-single,pins = <\\n                    AM33XX_IOPAD(0x0838, PIN_INPUT | MUX_MODE7 ) /* (T6) P2_22, gpmc_ad14.gpio1[14] INT2 */\\n                    AM33XX_IOPAD(0x08ec, PIN_INPUT | MUX_MODE7 ) /* (R6) P1_04, gpmc_a11.gpio2[25] INT1 */\\n                >;\\n            };\\n\\n            pb_spi0_pins: pinmux_pb_spi0_pins {\\n                pinctrl-single,pins = <\\n                    AM33XX_IOPAD(0x0950, PIN_INPUT | MUX_MODE0 ) /* (A17) spi0_sclk.spi0_sclk */\\n                    AM33XX_IOPAD(0x0954, PIN_INPUT | MUX_MODE0 ) /* (B17) spi0_d0.spi0_d0 */\\n                    AM33XX_IOPAD(0x0958, PIN_INPUT | MUX_MODE0 ) /* (B16) spi0_d1.spi0_d1 */\\n                    AM33XX_IOPAD(0x095c, PIN_INPUT | MUX_MODE0 ) /* (A16) spi0_cs0.spi0_cs0 */\\n                >;\\n            };\\n        };\\n    };\\n\\n    fragment@3 {\\n        target = <&spi0>;\\n        __overlay__ {\\n            status = \\\"okay\\\";\\n            pinctrl-names = \\\"default\\\";\\n            pinctrl-0 = <&pb_spi0_pins>;\\n\\n            channel@0{ status = \\\"disabled\\\"; };\\n            channel@1{ status = \\\"disabled\\\"; };\\n        };\\n    };\\n\\n    fragment@4 {\\n        target = <&spi0>;\\n        __overlay__ {\\n            #address-cells = <1>;\\n            #size-cells = <0>;\\n\\n            lsm6dsmtr: lsm6dsm@0 {\\n                spi-max-frequency = <5000000>;\\n                compatible = \\\"st,lsm6dsm\\\";\\n                reg = <0x0>;\\n                interrupt-parent = <&gpio2>;\\n                interrupts = <25 IRQ_TYPE_LEVEL_HIGH>;\\n            };\\n        };\\n    };\\n};\\n\")), mdx(\"p\", null, \"If everything in the device tree is set up correctly, you will get \\\"bb.org-overlays/src/arm/PB-SPI0-LSM6DSMTR.dtbo\\\" after executing \\\"make\\\". Copy this dtbo file to \\\"/lib/firmware\\\" folder on the pocketbeagle.\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Use the compiled device tree overlay file\")), mdx(\"p\", null, \"Open \\\"/boot/uEnv.txt\\\" with a text editor on your pocketbeagle, add the following line at the \\\"Additional custom capes\\\" section:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"###Additional custom capes\\nuboot_overlay_addr4=/lib/firmware/PB-SPI0-LSM6DSMTR-INT1.dtbo\\n\")), mdx(\"p\", null, \"Now you can reboot and the driver should be loaded correctly. You can check the IMU devices at \\\"/sys/bus/iio/devices\\\" and you should see devices like \\\"iio:device0\\\", \\\"iio:device1\\\" etc. In my case, \\\"iio:device1\\\" cooresponds to the accelerometer and you can see attributes like:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"current_timestamp_clock\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"in_accel_x_raw\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"in_accel_x_scale\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"in_accel_y_raw\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"in_accel_y_scale\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"in_accel_z_raw\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"in_accel_z_scale\")), mdx(\"p\", null, \"You should be able to read values from the attributes, for example: \"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"debian@beaglebone:/sys/bus/iio/devices/iio:device1$ cat in_accel_z_raw\\n17111\\n\")), mdx(\"h2\", {\n    \"id\": \"reference\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#reference\",\n    \"aria-label\": \"reference permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Reference\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[1]\", \" \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://wiki.analog.com/resources/tools-software/linux-drivers/iio-inertial-measurement-units/adis16475#trigger_management\"\n  }, \"https://wiki.analog.com/resources/tools-software/linux-drivers/iio-inertial-measurement-units/adis16475#trigger_management\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[2]\", \" \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://events19.linuxfoundation.org/wp-content/uploads/2017/12/Bandan-Das_Drone_SITL_bringup_with_the_IIO_framework.pdf\"\n  }, \"https://events19.linuxfoundation.org/wp-content/uploads/2017/12/Bandan-Das_Drone_SITL_bringup_with_the_IIO_framework.pdf\"))));\n}\n;\nMDXContent.isMDXComponent = true;","headings":[{"depth":2,"value":"Install tools"},{"depth":2,"value":"Fetch Linux kernel source"},{"depth":2,"value":"Integrate IIO drivers"},{"depth":2,"value":"Update device tree overlay"},{"depth":2,"value":"Reference"}]}},"pageContext":{"slug":"/tech-notes/system/beaglebone/beaglebone-iio-imu/","next":{"label":"Back to Main Page","link":"https://rdu.im"},"repositoryEditUrl":"https://github.com/rxdu/note/tree/main/src/docs/tech-notes/system/beaglebone/beaglebone-iio-imu.mdx","repositoryProvider":"GitHub"}},"staticQueryHashes":["1954253342","2328931024","2501019404","973074209"]}