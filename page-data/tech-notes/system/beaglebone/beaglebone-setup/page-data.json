{"componentChunkName":"component---node-modules-rocketseat-gatsby-theme-docs-core-src-templates-docs-query-js","path":"/tech-notes/system/beaglebone/beaglebone-setup","result":{"data":{"mdx":{"id":"b9d3365e-cf50-5397-bec5-8e288ee1c32f","excerpt":"Flash Image to eMMC Follow reference  1  to flash the OS to the eMMC storage. A brief summary: Download image and extract the .img file Create a bootable SDâ€¦","fields":{"slug":"/tech-notes/system/beaglebone/beaglebone-setup/"},"frontmatter":{"title":"Beaglebone Setup","description":"Basic setup for Beaglebone","image":null,"disableTableOfContents":null},"body":"var _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar _frontmatter = {\n  \"title\": \"Beaglebone Setup\",\n  \"description\": \"Basic setup for Beaglebone\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", {\n    \"id\": \"flash-image-to-emmc\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#flash-image-to-emmc\",\n    \"aria-label\": \"flash image to emmc permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Flash Image to eMMC\"), mdx(\"p\", null, \"Follow reference \", \"[1]\", \" to flash the OS to the eMMC storage. A brief summary:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Download image and extract the .img file\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Create a bootable SD card with the image (using tools such as etcher)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Boot into the OS on the SD card (holding the SD button and then power up the board)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Modify \\\"/boot/uEnv.txt\\\" and uncomment the line that enables the flasher\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Shutdown the board and boot from the SD again, wait until the eMMC is flashed with the system\")), mdx(\"p\", null, \"You can login to the system after the board boots up\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"$ ssh debian@192.168.7.2 # default password: temppwd\\n\")), mdx(\"h2\", {\n    \"id\": \"setup-ethernet-over-usb-for-pocketbeagle\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#setup-ethernet-over-usb-for-pocketbeagle\",\n    \"aria-label\": \"setup ethernet over usb for pocketbeagle permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Setup Ethernet over USB for Pocketbeagle\"), mdx(\"p\", null, \"Add the following lines to /etc/network/interfaces by modifying the files directly after you mount the SD card to your computer\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"iface usb0 inet static\\n    address 192.168.7.2\\n    netmask 255.255.255.0\\n    gateway 192.168.7.1\\n    dns-nameservers 8.8.8.8\\n\")), mdx(\"h2\", {\n    \"id\": \"add-new-user\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#add-new-user\",\n    \"aria-label\": \"add new user permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Add New User\"), mdx(\"p\", null, \"Now you can add your own account and delete the default one\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"$ sudo adduser --ingroup users <USERNAME>\\n$ sudo adduser <YOUR_USERNAME> sudo\\n$ logout\\n$ sudo deluser --remove-home user\\n\")), mdx(\"h2\", {\n    \"id\": \"setup-wifi\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#setup-wifi\",\n    \"aria-label\": \"setup wifi permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Setup Wifi\"), mdx(\"p\", null, \"You can use \\\"connman\\\" to manage the wireless network. But I personally prefer using the old way.\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Disable connman\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"$ systemctl disable connman.service\\n\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Generate WPA passphrase for your WiFi\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"$ wpa_passphrase <ssid> <password>\\n\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Update iface usb0 inet static\\naddress 192.168.7.2\\nnetmask 255.255.255.0\\ngateway 192.168.7.1\\ndns-nameservers 8.8.8.8\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"$ sudo nano /etc/network/interfaces\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"# interfaces(5) file used by ifup(8) and ifdown(8)\\nauto lo\\niface lo inet loopback\\n\\nauto wlan0\\niface wlan0 inet dhcp\\n    wpa-ssid ExampleWifi\\n    wpa-psk <wpa-psk-generated-by-wpa-passphrase-command>   \\n\")), mdx(\"h2\", {\n    \"id\": \"mount-usr-and-home-on-sd-card\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#mount-usr-and-home-on-sd-card\",\n    \"aria-label\": \"mount usr and home on sd card permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Mount \\\"/usr\\\" and \\\"/home\\\" on SD card\"), mdx(\"p\", null, \"The BeagleBone Blue has 4G on-board eMMC flash storage. It could be enough for many applications. But for experimental projects, it's more convenient to have more space so that you don't need to worry too much about filling the eMMC flash up when installing new packages.\"), mdx(\"p\", null, \"Check reference \", \"[2]\", \" to get more detailed instructions. Here is a brief summary of what you need to do:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"# 1. format your SD card into two partitions\\n# 2. insert the SD card and power up the board\\n# 3. check if you have the two partitions on the SD card recognized by the OS correctly\\n$ fdisk -l\\n# (the two partitions are labeled as \\\"/dev/mmcblk0p1\\\" and \\\"/dev/mmcblk0p2\\\" on my board)\\n# 4. format the two partions as ext4\\n$ mkfs.ext4 /dev/mmcblk0p1\\n$ mkfs.ext4 /dev/mmcblk0p2 \\n# 5. create temporary folders in /tmp and mount the two partitions to the temporary folders, copy files from /usr and /home accordingly\\n$ sudo mkdir /tmp/usr \\n$ sudo mkdir /tmp/home\\n$ sudo mount /dev/mmcblk0p1 /tmp/usr \\n$ sudo mount /dev/mmcblk0p2 /tmp/home\\n$ sudo rsync -ahv --progress /usr/ /tmp/usr/\\n$ sudo rsync -ahv --progress /home/ /tmp/home/ \\n# 6. update /etc/fstab to reflect the change\\n$ sudo lsblk -no UUID /dev/mmcblk0p1 # get UUID of /dev/mmcblk0p1\\n# add two lines in /etc/fstab\\n$ UUID=<ID-YOU-GOT-FROM-ABOVE-CMD> /usr ext4    defaults 0 1\\n$ UUID=<ID-YOU-GOT-FROM-ABOVE-CMD> /home ext4    defaults 0 1\\nor\\n$ /dev/mmcblk0p1 /usr ext4 defaults 0 1\\n$ /dev/mmcblk0p2 /home ext4 defaults 0 1\\n# 7. reboot and check the files\\n$ df -h\\n\")), mdx(\"h2\", {\n    \"id\": \"add-a-swap-file\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#add-a-swap-file\",\n    \"aria-label\": \"add a swap file permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Add a Swap File\"), mdx(\"p\", null, \"Sometimes a swap area may be needed to compile a large project on beaglebone black. Instead of setting up a swap partition, you can also use a swap file.\"), mdx(\"p\", null, \"In the following steps, a swap file \\\"/usr/swapfile1\\\" will be created and used.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"# 1. Create Storage File\\n$ sudo dd if=/dev/zero of=/usr/swapfile1 bs=1024 count=524288\\n# 2. Secure swap file\\n$ sudo chown root:root /usr/swapfile1\\n$ sudo chmod 0600 /usr/swapfile1\\n# 3. Set up a Linux swap area and enable the swap file\\n$ sudo mkswap /usr/swapfile1\\n$ sudo swapon /usr/swapfile1\\n# 4. Update /etc/fstab file\\n$ sudo nano /etc/fstab \\n# Add the following line\\n/usr/swapfile1 none swap sw 0 0\\n\")), mdx(\"p\", null, \"Reboot the board and use htop to check if the swap file is set up correctly.\"), mdx(\"h2\", {\n    \"id\": \"update-kernel\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#update-kernel\",\n    \"aria-label\": \"update kernel permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Update Kernel\"), mdx(\"p\", null, \"You can upgrade or change to a Preempt-RT patched kernel using the script provided in the Debian OS from Beaglebone\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"$ cd /opt/scripts/tools\\n$ git pull   # you may need to use sudo here\\n$ sudo /opt/scripts/tools/update_kernel.sh --bone-rt-channel --lts-4_4   # --lts-stable or other available options\\n\")), mdx(\"p\", null, \"Refer to \", \"[5]\", \" for additiona options.\"), mdx(\"p\", null, \"Note that if you use the kernel from TI channel (for example, use \\\"--ti-rt-channel\\\" option), you might experience errors related to the PINMUX helper driver. \"), mdx(\"h2\", {\n    \"id\": \"robotics-cape-library\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#robotics-cape-library\",\n    \"aria-label\": \"robotics cape library permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Robotics Cape library\"), mdx(\"p\", null, \"TI channel kernels have more complete support to PRU drivers so you may want to use a kernel from the TI channel if you're using the Robotics Cape or Beaglebone Blue.\", \"[7]\"), mdx(\"p\", null, \"When using the TI channel RT kernel 4.4 and 4.9 on Beaglebone Blue with the Robotics Cape library, I got the following error message from the library:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"...\\ncan't open: /sys/devices/platform/ocp/ocp:P9_24_pinmux/state\\nPinmux: No such file or directory\\nWARNING: missing PINMUX driver\\nYou probbaly just need a newer kernel\\n\")), mdx(\"p\", null, \"I'm not sure if this will happen to other boards or how to install this pinmux helper driver manually for the TI channel kernels. I resolved this issue by switching to a bone channel kernel.\"), mdx(\"p\", null, \"The other issue related to the Robotics Cape library that occured even after installing the bone channel RT kernel is on the pru-rproc driver, which gives the error message\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"ERROR: pru-rproc driver missing\\n\")), mdx(\"p\", null, \"The solution is to add a symbolic link of clpru executable to /usr/share/ti/cgt-pru/bin folder:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"$ cd /usr/share/ti/cgt-pru\\n$ mkdir bin\\n$ cd bin\\n$ ln -s /usr/bin/clpru clpru\\n\")), mdx(\"p\", null, \"See \", \"[6]\", \" for more discussions on this issue and the above solution is from this page.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Reference\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[1]\", \" \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/beagleboard/beaglebone-blue/wiki/Flashing-firmware\"\n  }, \"https://github.com/beagleboard/beaglebone-blue/wiki/Flashing-firmware\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[2]\", \" \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://gist.github.com/rxdu/35fb70c71cde5b44815e52bd8c338ff3\"\n  }, \"https://gist.github.com/rxdu/35fb70c71cde5b44815e52bd8c338ff3\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[3]\", \" \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"http://xeikonmirkwood.blogspot.com/2014/05/connman-is-annoying.html\"\n  }, \"http://xeikonmirkwood.blogspot.com/2014/05/connman-is-annoying.html\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[4]\", \" \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"http://pdkb.azurewebsites.net/Home/Detail/installing-can-bus-drivers-for-osd3358-systems-running-debian\"\n  }, \"http://pdkb.azurewebsites.net/Home/Detail/installing-can-bus-drivers-for-osd3358-systems-running-debian\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[5]\", \" \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/beagleboard/bb.org-overlays\"\n  }, \"https://github.com/beagleboard/bb.org-overlays\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[6]\", \" \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://groups.google.com/forum/#!topic/beagleboard/od6h9yTKUD4\"\n  }, \"https://groups.google.com/forum/#!topic/beagleboard/od6h9yTKUD4\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[7]\", \" \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/StrawsonDesign/librobotcontrol/issues/130\"\n  }, \"https://github.com/StrawsonDesign/librobotcontrol/issues/130\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[8]\", \" \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://www.cyberciti.biz/faq/linux-add-a-swap-file-howto/\"\n  }, \"https://www.cyberciti.biz/faq/linux-add-a-swap-file-howto/\"))));\n}\n;\nMDXContent.isMDXComponent = true;","headings":[{"depth":2,"value":"Flash Image to eMMC"},{"depth":2,"value":"Setup Ethernet over USB for Pocketbeagle"},{"depth":2,"value":"Add New User"},{"depth":2,"value":"Setup Wifi"},{"depth":2,"value":"Mount \"/usr\" and \"/home\" on SD card"},{"depth":2,"value":"Add a Swap File"},{"depth":2,"value":"Update Kernel"},{"depth":2,"value":"Robotics Cape library"}]}},"pageContext":{"slug":"/tech-notes/system/beaglebone/beaglebone-setup/","next":{"label":"Back to Main Page","link":"https://rdu.im"},"repositoryEditUrl":"https://github.com/rxdu/note/tree/main/src/docs/tech-notes/system/beaglebone/beaglebone-setup.mdx","repositoryProvider":"GitHub"}},"staticQueryHashes":["1954253342","2328931024","2501019404","973074209"]}