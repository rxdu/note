{"componentChunkName":"component---node-modules-rocketseat-gatsby-theme-docs-core-src-templates-docs-query-js","path":"/tech-notes/system/beaglebone/beaglebone-xenomai","result":{"data":{"mdx":{"id":"b4daf6d5-94f6-505b-9c35-e23e5eab6781","excerpt":"Build Xenomai-patched Linux for Beaglebone Black 1 . The general building steps for other ARM-based boards should be similar but specific details related toâ€¦","fields":{"slug":"/tech-notes/system/beaglebone/beaglebone-xenomai/"},"frontmatter":{"title":"Xenomai on Beaglebone","description":"Build xenomai for Beaglebone","image":null,"disableTableOfContents":null},"body":"var _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar _frontmatter = {\n  \"title\": \"Xenomai on Beaglebone\",\n  \"description\": \"Build xenomai for Beaglebone\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Build Xenomai-patched Linux for Beaglebone Black\", \"[1]\", \". The general building steps for other ARM-based boards should be similar but specific details related to hardware can be drastically different.\"), mdx(\"h4\", {\n    \"id\": \"install-toolchain\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h4\",\n    \"href\": \"#install-toolchain\",\n    \"aria-label\": \"install toolchain permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Install toolchain\"), mdx(\"p\", null, \"If you use a pre-built root file system, make sure you're using a compatible toolchain to compile bootloader and kernel.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"$ wget -c https://releases.linaro.org/components/toolchain/binaries/6.4-2018.05/arm-linux-gnueabihf/gcc-linaro-6.4.1-2018.05-x86_64_arm-linux-gnueabihf.tar.xz\\n$ tar xf gcc-linaro-6.4.1-2018.05-x86_64_arm-linux-gnueabihf.tar.xz\\n\")), mdx(\"h4\", {\n    \"id\": \"install-dependencies\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h4\",\n    \"href\": \"#install-dependencies\",\n    \"aria-label\": \"install dependencies permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Install dependencies\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"$ sudo apt install bison flex lzop u-boot-tools\\n\")), mdx(\"h4\", {\n    \"id\": \"build-bootloader\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h4\",\n    \"href\": \"#build-bootloader\",\n    \"aria-label\": \"build bootloader permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Build bootloader\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"$ git clone https://github.com/u-boot/u-boot\\n$ cd u-boot/\\n$ git checkout v2018.09 -b tmp-v2018.09\\n\\n$ wget -c https://rcn-ee.com/repos/git/u-boot-patches/v2018.09/0001-am335x_evm-uEnv.txt-bootz-n-fixes.patch\\n$ wget -c https://rcn-ee.com/repos/git/u-boot-patches/v2018.09/0002-U-Boot-BeagleBone-Cape-Manager.patch\\n\\n$ patch -p1 < 0001-am335x_evm-uEnv.txt-bootz-n-fixes.patch\\n$ patch -p1 < 0002-U-Boot-BeagleBone-Cape-Manager.patch\\n\\n$ make ARCH=arm CROSS_COMPILE=arm-linux-gnueabihf- distclean\\n$ make ARCH=arm CROSS_COMPILE=arm-linux-gnueabihf- am335x_evm_defconfig\\n$ make ARCH=arm CROSS_COMPILE=arm-linux-gnueabihf- \\n\")), mdx(\"p\", null, \"You should get \\\"MLO\\\", \\\"u-boot.img\\\" in the root folder of u-boot after successful compilation.\"), mdx(\"h4\", {\n    \"id\": \"buid-kernel\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h4\",\n    \"href\": \"#buid-kernel\",\n    \"aria-label\": \"buid kernel permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Buid Kernel\"), mdx(\"p\", null, \"Download kernel source file\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"$ git clone https://github.com/beagleboard/linux.git\\n\\n# look for the desired branch, for example\\n$ git tag -l | grep 4.9\\n\\n# checkout the desired version into a new branch, use \\\"4.9.88-ti-xenomai-r107\\\" as an example\\n$ git checkout 4.9.88-ti-xenomai-r107 -b tmp-4.9.88-ti-xenomai-r107\\n\")), mdx(\"p\", null, \"Start the configuration menu and modify kernel options\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"$ make ARCH=arm CROSS_COMPILE=arm-linux-gnueabihf- bb.org_defconfig \\n$ make ARCH=arm CROSS_COMPILE=arm-linux-gnueabihf- menuconfig\\n\")), mdx(\"p\", null, \"Check the following configurations for Xenomai\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"* General setup ---> \\n- Local version - append to kernel release : \\\"-ti-xenomai-r107\\\"\\n- Stack Protector buffer overflow detection: Disable \\n* Kernel Features  --->\\n- Preemption Model : select \\\"Preemptible Kernel (Low-Latency Desktop)\\\"                           \\n- Timer frequency : change to 1000Hz\\n- [] Allow for memory compaction : Disable\\n- [] Contiguous Memory Allocator : Disable\\n* CPU Power Management  --->\\n- [] CPU Frequency scaling : Disable\\n    \\n* Kernel hacking  --->\\n- [] KGDB: kernel debugger : Disable\\n\")), mdx(\"p\", null, \"You could also enable Xenomai supported device drivers in the config according to your needs.\"), mdx(\"p\", null, \"Build kernel image:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"$ make -j8 ARCH=arm CROSS_COMPILE=arm-linux-gnueabihf- zImage dtbs\\n$ make -j8 ARCH=arm CROSS_COMPILE=arm-linux-gnueabihf- modules\\n\")), mdx(\"p\", null, \"If you need to build uImage\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"$ make -j8 ARCH=arm CROSS_COMPILE=arm-linux-gnueabihf- uImage LOADADDR=0x80008000\\n\")), mdx(\"p\", null, \"You can also build debian packages for easier installation (for example, update kernel on the eMMC)\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"$ make -j8 ARCH=arm CROSS_COMPILE=arm-linux-gnueabihf- deb-pkg\\n\")), mdx(\"p\", null, \"If you want to add a custom string identifier to your kernel name, you can add the \\\"LOCALVERSION\\\" parameter\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"$ make -j8 ARCH=arm CROSS_COMPILE=arm-linux-gnueabihf- deb-pkg LOCALVERSION=-rt\\n\")), mdx(\"p\", null, \"Alternatively, you could deploy to the SD card manually.\"), mdx(\"h4\", {\n    \"id\": \"prepare-sd-card\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h4\",\n    \"href\": \"#prepare-sd-card\",\n    \"aria-label\": \"prepare sd card permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Prepare SD card\"), mdx(\"p\", null, \"Create 2 partitions\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"/boot formated in FAT32 with \\\"boot\\\" flag \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"/rootfs formated in ext4\")), mdx(\"p\", null, \"Set SD card location and kernel version for installation\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"$ export SD_ROOTFS=/media/rdu/rootfs\\n$ export kernel_version=4.9.88-ti-xenomai-r107 \\n\")), mdx(\"h4\", {\n    \"id\": \"deploy-u-boot\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h4\",\n    \"href\": \"#deploy-u-boot\",\n    \"aria-label\": \"deploy u boot permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Deploy u-boot\"), mdx(\"p\", null, \"You need to copy \\\"MLO\\\", \\\"u-boot.img\\\", and the \\\"uEnv.txt\\\" into the /boot partitiona on the SD card.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"##Rename as: uEnv.txt to override old bootloader in eMMC\\n##These are needed to be compliant with Angstrom's 2013.06.20 u-boot.\\n\\nloadaddr=0x82000000\\nfdtaddr=0x88000000\\nrdaddr=0x88080000\\n\\ninitrd_high=0xffffffff\\nfdt_high=0xffffffff\\n\\n##These are needed to be compliant with Debian 2014-05-14 u-boot.\\n\\nloadximage=echo debug: [/boot/vmlinuz-${uname_r}] ... ; load mmc 0:2 ${loadaddr} /boot/vmlinuz-${uname_r}\\nloadxfdt=echo debug: [/boot/dtbs/${uname_r}/${fdtfile}] ... ;load mmc 0:2 ${fdtaddr} /boot/dtbs/${uname_r}/${fdtfile}\\nloadxrd=echo debug: [/boot/initrd.img-${uname_r}] ... ; load mmc 0:2 ${rdaddr} /boot/initrd.img-${uname_r}; setenv rdsize ${filesize}\\nloaduEnvtxt=load mmc 0:2 ${loadaddr} /boot/uEnv.txt ; env import -t ${loadaddr} ${filesize};\\ncheck_dtb=if test -n ${dtb}; then setenv fdtfile ${dtb};fi;\\ncheck_uboot_overlays=if test -n ${enable_uboot_overlays}; then setenv enable_uboot_overlays ;fi;\\nloadall=run loaduEnvtxt; run check_dtb; run check_uboot_overlays; run loadximage; run loadxrd; run loadxfdt;\\n\\nmmcargs=setenv bootargs console=tty0 console=${console} ${optargs} ${cape_disable} ${cape_enable} root=/dev/mmcblk0p2 rootfstype=${mmcrootfstype} ${cmdline}\\n\\nuenvcmd=run loadall; run mmcargs; echo debug: [${bootargs}] ... ; echo debug: [bootz ${loadaddr} ${rdaddr}:${rdsize} ${fdtaddr}] ... ; bootz ${loadaddr} ${rdaddr}:${rdsize} ${fdtaddr};\\n\")), mdx(\"p\", null, \"Make sure you specify the right path to the rootfs in \\\"/boot/uEnv.txt\\\". In the uEnv.txt shown above, it is \\\"root=/dev/mmcblk0p2\\\".\"), mdx(\"h4\", {\n    \"id\": \"root-file-system\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h4\",\n    \"href\": \"#root-file-system\",\n    \"aria-label\": \"root file system permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Root file system\"), mdx(\"p\", null, \"You can use tools like buildroot to make your customized root file system or you can use debootstrap or multistrap to build your Debian/Ubuntu distribution. Here I use the pre-built debian for Beaglebone.\"), mdx(\"p\", null, \"Copy pre-built root file system to the SD card\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"$ wget -c https://rcn-ee.com/rootfs/eewiki/minfs/debian-9.5-minimal-armhf-2018-07-30.tar.xz\\n$ tar xf debian-9.5-minimal-armhf-2018-07-30.tar.xz\\n$ sudo tar xfvp ./*-*-*-armhf-*/armhf-rootfs-*.tar -C /media/rootfs/\\n$ sync\\n$ sudo chown root:root /media/rootfs/\\n$ sudo chmod 755 /media/rootfs/\\n\")), mdx(\"h4\", {\n    \"id\": \"deploy-kernel\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h4\",\n    \"href\": \"#deploy-kernel\",\n    \"aria-label\": \"deploy kernel permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Deploy kernel\"), mdx(\"p\", null, \"Install kernel and device tree:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"# kernel\\n$ sudo cp -v ./arch/arm/boot/zImage ${SD_ROOTFS}/boot/vmlinuz-${kernel_version}\\n\\n# device tree\\n$ sudo mkdir -p ${SD_ROOTFS}/boot/dtbs/${kernel_version}\\n$ sudo cp -v ./arch/arm/boot/dts/am335x* ${SD_ROOTFS}/boot/dtbs/${kernel_version}\\n\")), mdx(\"p\", null, \"Install headers:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"$ make -j8 ARCH=arm headers_check\\n$ sudo make -j8 ARCH=arm INSTALL_HDR_PATH=${SD_ROOTFS} headers_install\\n\")), mdx(\"p\", null, \"Install modules and firmware\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"$ sudo make -j8 ARCH=arm CROSS_COMPILE=arm-linux-gnueabihf- modules_install INSTALL_MOD_PATH=${SD_ROOTFS}\\n$ sudo make -j8 ARCH=arm CROSS_COMPILE=arm-linux-gnueabihf- firmware_install INSTALL_MOD_PATH=${SD_ROOTFS}\\n\")), mdx(\"p\", null, \"Update \\\"/rootfs/boot/uEnv.txt\\\":\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"uname_r=4.9.88-ti-xenomai-r107\\n\")), mdx(\"h4\", {\n    \"id\": \"additional-configurations\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h4\",\n    \"href\": \"#additional-configurations\",\n    \"aria-label\": \"additional configurations permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Additional configurations\"), mdx(\"p\", null, \"Update fstab (Note you may need to change \\\"/dev/mmcblk0p2\\\" according to your SD configuration)\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"$ sudo sh -c \\\"echo '/dev/mmcblk0p2  /  auto  errors=remount-ro  0  1' >> /media/rootfs/etc/fstab\\\"\\n\")), mdx(\"p\", null, \"Update hostname (default is \\\"arm\\\")\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"$ sudo nano /etc/hostname\\n$ sudo nano /etc/hosts\\n\")), mdx(\"p\", null, \"Update network interface \"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"$ sudo nano /etc/network/interfaces\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"auto lo\\niface lo inet loopback\\n\\nauto eth0\\niface eth0 inet dhcp\\n\")), mdx(\"p\", null, \"At this point, you should have a bootable Linux running on the Beaglebone.\"), mdx(\"h4\", {\n    \"id\": \"install-xenomai-tools-and-libraries\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h4\",\n    \"href\": \"#install-xenomai-tools-and-libraries\",\n    \"aria-label\": \"install xenomai tools and libraries permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Install Xenomai tools and libraries\"), mdx(\"p\", null, \"First you need to check which version of Xenomai is install with the kernel. \"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"$ cat /proc/xenomai/version\\n\")), mdx(\"p\", null, \"In this case, the version of Xenomai is 3.0.6. Download code from the Xenomai website. \"), mdx(\"p\", null, \"Install dependencies\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"$ sudo apt-get install build-essential libtool libltdl-dev\\n\")), mdx(\"p\", null, \"Finally build the code\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"$ ./scripts/bootstrap\\n$ ./configure --enable-smp --with-core=cobalt\\n$ make\\n$ sudo make install\\n\")), mdx(\"p\", null, \"Once finished, you can test if the installation is successful\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"$ cd /usr/xenomai/bin\\n$ sudo ./latency\\n\")), mdx(\"p\", null, \"You should get something like\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"== Sampling period: 1000 us\\n== Test mode: periodic user-mode task\\n== All results in microseconds\\nwarming up...\\nRTT|  00:00:01  (periodic user-mode task, 1000 us period, priority 99)\\nRTH|----lat min|----lat avg|----lat max|-overrun|---msw|---lat best|--lat worst\\nRTD|      4.041|      6.969|     28.750|       0|     0|      4.041|     28.750\\nRTD|      4.083|      8.077|     39.708|       0|     0|      4.041|     39.708\\nRTD|      4.041|      7.884|     40.541|       0|     0|      4.041|     40.541\\nRTD|      4.082|      7.033|     37.291|       0|     0|      4.041|     40.541\\nRTD|      4.082|      8.122|     42.165|       0|     0|      4.041|     42.165\\nRTD|      4.082|      7.020|     37.249|       0|     0|      4.041|     42.165\\nRTD|      4.082|      8.145|     42.457|       0|     0|      4.041|     42.457\\nRTD|      3.831|      7.878|     41.415|       0|     0|      3.831|     42.457\\nRTD|      4.040|      6.717|     32.665|       0|     0|      3.831|     42.457\\n\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Reference\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[1]\", \" \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://www.digikey.com/eewiki/display/linuxonarm/BeagleBone+Black\"\n  }, \"https://www.digikey.com/eewiki/display/linuxonarm/BeagleBone+Black\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[2]\", \" \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"http://www.simplerobot.net/2018/06/build-realtime-xenomai-3-kernel-for.html\"\n  }, \"http://www.simplerobot.net/2018/06/build-realtime-xenomai-3-kernel-for.html\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[3]\", \" \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://lemariva.com/blog/2018/07/raspberry-pi-xenomai-patching-tutorial-for-kernel-4-14-y\"\n  }, \"https://lemariva.com/blog/2018/07/raspberry-pi-xenomai-patching-tutorial-for-kernel-4-14-y\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[4]\", \" \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://stackoverflow.com/questions/21740619/how-can-i-generate-kernel-headers-for-an-unknown-embedded-arm-system\"\n  }, \"https://stackoverflow.com/questions/21740619/how-can-i-generate-kernel-headers-for-an-unknown-embedded-arm-system\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[5]\", \" \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://www.vultr.com/docs/how-to-change-your-hostname-on-debian\"\n  }, \"https://www.vultr.com/docs/how-to-change-your-hostname-on-debian\"))));\n}\n;\nMDXContent.isMDXComponent = true;","headings":[{"depth":4,"value":"Install toolchain"},{"depth":4,"value":"Install dependencies"},{"depth":4,"value":"Build bootloader"},{"depth":4,"value":"Buid Kernel"},{"depth":4,"value":"Prepare SD card"},{"depth":4,"value":"Deploy u-boot"},{"depth":4,"value":"Root file system"},{"depth":4,"value":"Deploy kernel"},{"depth":4,"value":"Additional configurations"},{"depth":4,"value":"Install Xenomai tools and libraries"}]}},"pageContext":{"slug":"/tech-notes/system/beaglebone/beaglebone-xenomai/","next":{"label":"Back to Main Page","link":"https://rdu.im"},"repositoryEditUrl":"https://github.com/rxdu/note/tree/main/src/docs/tech-notes/system/beaglebone/beaglebone-xenomai.mdx","repositoryProvider":"GitHub"}},"staticQueryHashes":["1954253342","2328931024","2501019404","973074209"]}