{"componentChunkName":"component---node-modules-rocketseat-gatsby-theme-docs-core-src-templates-docs-query-js","path":"/tech-notes/system/jetson/flash-jetson-with-vm","result":{"data":{"mdx":{"id":"3808e14a-2d72-5a2e-80b4-0461fdba9d4f","excerpt":"NOTE  The method described here is not reliable. In my case, it worked with Xavier NX dev kit but didn't work with the TX2 + Orbitty carrier board. The mainâ€¦","fields":{"slug":"/tech-notes/system/jetson/flash-jetson-with-vm/"},"frontmatter":{"title":"Flash Jetson Device with Virtualbox","description":"How to flash Jetson Device with Virtualbox","image":null,"disableTableOfContents":null},"body":"var _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar _frontmatter = {\n  \"title\": \"Flash Jetson Device with Virtualbox\",\n  \"description\": \"How to flash Jetson Device with Virtualbox\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"NOTE\"), \" The method described here is not reliable. In my case, it worked with Xavier NX dev kit but didn't work with the TX2 + Orbitty carrier board.\"), mdx(\"p\", null, \"The main issue that may stop you from using an OS in virtualbox to flash a Jetson device using SDKManager is the USB setup. If the Jetson can be recognized properly in virtualbox, then the whole flashing process is basically the same with that in a native system.\"), mdx(\"p\", null, \"General steps to follow:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Install Virtualbox (tested with virtualbox v6.1)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Install additional virtualbox supporting packages\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"$ sudo apt install virtualbox-ext-pack virtualbox-guest-additions-iso\\n\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Add user in host system to \\\"vboxusers\\\" group\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"# you can check if your user is in vboxusers group\\ngroups $USER\\n# if not, add to the group\\n$ sudo usermod -a -G vboxusers $USER\\n\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Restart your computer and put the Jetson device into recovery mode. \")), mdx(\"p\", null, \"Now you should be able to add the Nvidia USB device to the virtualbox and flash the OS inside with SDKManager.\"));\n}\n;\nMDXContent.isMDXComponent = true;","headings":[]}},"pageContext":{"slug":"/tech-notes/system/jetson/flash-jetson-with-vm/","next":{"label":"Back to Main Page","link":"https://rdu.im"},"repositoryEditUrl":"https://github.com/rxdu/note/tree/main/src/docs/tech-notes/system/jetson/flash-jetson-with-vm.mdx","repositoryProvider":"GitHub"}},"staticQueryHashes":["1954253342","2328931024","2501019404","973074209"]}