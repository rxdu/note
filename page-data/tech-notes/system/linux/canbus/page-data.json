{"componentChunkName":"component---node-modules-rocketseat-gatsby-theme-docs-core-src-templates-docs-query-js","path":"/tech-notes/system/linux/canbus","result":{"data":{"mdx":{"id":"a59fc223-fd4b-51c2-b133-53c95d44ed95","excerpt":"Bring up CAN Interface Note that the maximum bitrate depends on your specific hardware, for example PiCAN2 supports up to 1Mbps. To automatically bring up theâ€¦","fields":{"slug":"/tech-notes/system/linux/canbus/"},"frontmatter":{"title":"CAN Bus in Linux","description":"Use CAN Bus (SocketCAN) in Linux","image":null,"disableTableOfContents":null},"body":"var _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar _frontmatter = {\n  \"title\": \"CAN Bus in Linux\",\n  \"description\": \"Use CAN Bus (SocketCAN) in Linux\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", {\n    \"id\": \"bring-up-can-interface\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#bring-up-can-interface\",\n    \"aria-label\": \"bring up can interface permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Bring up CAN Interface\"), mdx(\"p\", null, \"Note that the maximum bitrate depends on your specific hardware, for example PiCAN2 supports up to 1Mbps.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"$ sudo ip link set can0 up type can bitrate 1000000\\n\")), mdx(\"p\", null, \"To automatically bring up the interface during boot, you can modify \\\"/etc/network/interfaces\\\"\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"$ sudo nano /etc/network/interfaces\\n\")), mdx(\"p\", null, \"Add the following lines\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"auto can0\\n    iface can0 inet manual\\n    pre-up /sbin/ip link set can0 type can bitrate 1000000 \\n    up /sbin/ifconfig can0 up\\n    post-up /sbin/ip link set can0 txqueuelen 10000\\n    down /sbin/ifconfig can0 down\\n\")), mdx(\"p\", null, \"You can check if CAN is brought up by using command \\\"ifconfig\\\". You should see something similar to this\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"$ can0: flags=193<UP,RUNNING,NOARP>  mtu 16\\n$     unspec 00-00-00-00-00-00-00-00-00-00-00-00-00-00-00-00  txqueuelen 10  (UNSPEC)\\n$     RX packets 4  bytes 32 (32.0 B)\\n$     RX errors 0  dropped 0  overruns 0  frame 0\\n$     TX packets 4  bytes 32 (32.0 B)\\n$     TX errors 1  dropped 1 overruns 0  carrier 1  collisions 0\\n\")), mdx(\"h2\", {\n    \"id\": \"loopback-test\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#loopback-test\",\n    \"aria-label\": \"loopback test permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Loopback Test\"), mdx(\"p\", null, \"You can use the loopback mode to test if PiCAN2 is working properly. You need to enable the loopback mode first.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"$ sudo ip link set can0 down\\n$ sudo ip link set can0 type can loopback on\\n$ sudo ip link set can0 up type can bitrate 1000000\\n\")), mdx(\"p\", null, \"Now open two terminals, one as sender and one as receiver.\"), mdx(\"p\", null, \"In sender terminal:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"$ cansend can0 001#1122334455667788\\n\")), mdx(\"p\", null, \"In receiver terminal:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"$ candump can0\\n\")), mdx(\"p\", null, \"If successful, you should expect\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"$ candump can0\\n$ can0  001   [8]  11 22 33 44 55 66 77 88\\n$ can0  001   [8]  11 22 33 44 55 66 77 88\\n\")), mdx(\"p\", null, \"Turn off the loopback mode:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"$ sudo ip link set can0 down\\n$ sudo ip link set can0 type can loopback off\\n$ sudo ip link set can0 up type can bitrate 1000000\\n\")), mdx(\"h2\", {\n    \"id\": \"log-frames-and-playback\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#log-frames-and-playback\",\n    \"aria-label\": \"log frames and playback permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Log Frames and Playback\"), mdx(\"p\", null, \"You can log can frames from a CAN interface to a file for debugging\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"$ candump -l can0\\n\")), mdx(\"p\", null, \"Then you can playback the log file\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"$ canplayer -I <candump-log-file-name>.log\\n\")), mdx(\"h2\", {\n    \"id\": \"dump-frames-with-filter-mask\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#dump-frames-with-filter-mask\",\n    \"aria-label\": \"dump frames with filter mask permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Dump Frames with Filter Mask\"), mdx(\"p\", null, \"Dump can frames with filter\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"$ candump can0,<interested-can-id(s)>:<filter-mask>\\n\")), mdx(\"p\", null, \"Example:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"$ candump can0,602:1fffffff\\n\")), mdx(\"p\", null, \"The example command dumps CAN message with ID 0x602 from can0. If you wang to dump all messages with ID 0x60x, you can adjust the filter to be 1ffffff0.\"), mdx(\"h2\", {\n    \"id\": \"more-commands\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#more-commands\",\n    \"aria-label\": \"more commands permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"More Commands\"), mdx(\"p\", null, \"Use this command to find more information of CAN related commands\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"$ ip link set can0 up type can help\\n\")), mdx(\"h2\", {\n    \"id\": \"reference\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#reference\",\n    \"aria-label\": \"reference permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Reference\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[1]\", \" \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"http://copperhilltech.com/pican2-controller-area-network-can-interface-for-raspberry-pi/\"\n  }, \"http://copperhilltech.com/pican2-controller-area-network-can-interface-for-raspberry-pi/\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[2]\", \" \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://raspberrypi.stackexchange.com/questions/51829/unable-to-bring-can-interface-up-on-raspberry-pi-3\"\n  }, \"https://raspberrypi.stackexchange.com/questions/51829/unable-to-bring-can-interface-up-on-raspberry-pi-3\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[3]\", \" \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://www.raspberrypi.org/forums/viewtopic.php?t=141052\"\n  }, \"https://www.raspberrypi.org/forums/viewtopic.php?t=141052\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[4]\", \" \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://harrisonsand.com/can-on-the-raspberry-pi/\"\n  }, \"https://harrisonsand.com/can-on-the-raspberry-pi/\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[5]\", \" \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://dayba.wordpress.com/2017/05/25/playing-with-socketcan-using-can-utils/\"\n  }, \"https://dayba.wordpress.com/2017/05/25/playing-with-socketcan-using-can-utils/\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[6]\", \" \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"http://www.cse.dmu.ac.uk/~eg/tele/CanbusIDandMask.html\"\n  }, \"http://www.cse.dmu.ac.uk/~eg/tele/CanbusIDandMask.html\"))));\n}\n;\nMDXContent.isMDXComponent = true;","headings":[{"depth":2,"value":"Bring up CAN Interface"},{"depth":2,"value":"Loopback Test"},{"depth":2,"value":"Log Frames and Playback"},{"depth":2,"value":"Dump Frames with Filter Mask"},{"depth":2,"value":"More Commands"},{"depth":2,"value":"Reference"}]}},"pageContext":{"slug":"/tech-notes/system/linux/canbus/","next":{"label":"Back to Main Page","link":"https://rdu.im"},"repositoryEditUrl":"https://github.com/rxdu/note/tree/main/src/docs/tech-notes/system/linux/canbus.mdx","repositoryProvider":"GitHub"}},"staticQueryHashes":["1954253342","2328931024","2501019404","973074209"]}