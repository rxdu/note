{"componentChunkName":"component---node-modules-rocketseat-gatsby-theme-docs-core-src-templates-docs-query-js","path":"/tech-notes/system/application/docker-advanced-build","result":{"data":{"mdx":{"id":"4d12bc41-090c-587d-8114-88369da13783","excerpt":"Conditional Build Sometimes you may need to build the image with different sets of commands for a small part of the build process. You can choose which set toâ€¦","fields":{"slug":"/tech-notes/system/application/docker-advanced-build/"},"frontmatter":{"title":"Advanced Docker Build","description":"More advanced techniques for building docker images","image":null,"disableTableOfContents":null},"body":"var _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar _frontmatter = {\n  \"title\": \"Advanced Docker Build\",\n  \"description\": \"More advanced techniques for building docker images\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", {\n    \"id\": \"conditional-build\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#conditional-build\",\n    \"aria-label\": \"conditional build permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Conditional Build\"), mdx(\"p\", null, \"Sometimes you may need to build the image with different sets of commands for a small part of the build process. You can choose which set to use by passing in user-defined arguments. There are two ways to handle this: \"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Use if/else condition from bash\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Use multi-stage build\")), mdx(\"p\", null, \"If the number of different conditions is small and the command for each condition is short, using bash may be simpler. But generally, it's cleaner to use multi-stage build:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-docker\"\n  }, \"# control argument\\nARG MY_ARG\\n\\n# common tasks\\nFROM ubuntu:focal AS base\\nRUN echo \\\"do common stuffs\\\"\\n\\n# condition 1\\nFROM base AS branch-arg1\\nRUN echo \\\"this is the stage for MY_ARG=arg1\\\"\\n\\n# condition 2\\nFROM base AS branch-arg2\\nRUN echo \\\"this is the stage for MY_ARG=arg2\\\"\\n\\n# more common tasks\\nFROM branch-${MY_ARG} AS final\\nRUN echo \\\"more common stuffs\\\"\\n\")), mdx(\"p\", null, \"Then you can build with command:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"$ docker build --build-arg MY_ARG=arg1 .\\n\")), mdx(\"h2\", {\n    \"id\": \"build-multi-platform-images\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#build-multi-platform-images\",\n    \"aria-label\": \"build multi platform images permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Build Multi-platform Images\"), mdx(\"p\", null, \"You can use the buildx CLI plugin to create multi-platform images. It's a two-step process:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Create a builder instance\")), mdx(\"p\", null, \"Here you will create a builder with name \\\"multi-platform\\\" that supports \\\"linux/amd64\\\" and \\\"linux/arm64\\\":\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"$ sudo docker buildx create \\\\\\n    --name multi-platform \\\\\\n    --platform linux/amd64,linux/arm64 \\\\\\n    --driver docker-container\\n\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Use the builder instance to build the images\")), mdx(\"p\", null, \"The following command will build the image for both \\\"linux/amd64\\\" and \\\"linux/arm64\\\" platforms and will push the image to the docker registry:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"$ sudo docker buildx build \\\\\\n        --build-arg MY_ARG=arg1 \\\\\\n        --builder multi-platform \\\\\\n        --output \\\"type=image,push=true\\\" \\\\\\n        --platform linux/amd64,linux/arm64 \\\\\\n        -t registry/image_name:tag \\\\\\n        . -f ./Dockerfile\\n\")), mdx(\"h2\", {\n    \"id\": \"reference\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#reference\",\n    \"aria-label\": \"reference permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Reference\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://stackoverflow.com/questions/43654656/dockerfile-if-else-condition-with-external-arguments\"\n  }, \"https://stackoverflow.com/questions/43654656/dockerfile-if-else-condition-with-external-arguments\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://docs.docker.com.xy2401.com/buildx/working-with-buildx/\"\n  }, \"https://docs.docker.com.xy2401.com/buildx/working-with-buildx/\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://blog.k4nz.com/5ec72c881c5ef14c740f876d7e26b9cd/\"\n  }, \"https://blog.k4nz.com/5ec72c881c5ef14c740f876d7e26b9cd/\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://www.docker.com/blog/faster-multi-platform-builds-dockerfile-cross-compilation-guide/\"\n  }, \"https://www.docker.com/blog/faster-multi-platform-builds-dockerfile-cross-compilation-guide/\"))));\n}\n;\nMDXContent.isMDXComponent = true;","headings":[{"depth":2,"value":"Conditional Build"},{"depth":2,"value":"Build Multi-platform Images"},{"depth":2,"value":"Reference"}]}},"pageContext":{"slug":"/tech-notes/system/application/docker-advanced-build/","next":{"label":"Back to Main Page","link":"https://rdu.im"},"repositoryEditUrl":"https://github.com/rxdu/note/tree/main/src/docs/tech-notes/system/application/docker-advanced-build.mdx","repositoryProvider":"GitHub"}},"staticQueryHashes":["1954253342","2328931024","2501019404","973074209"]}